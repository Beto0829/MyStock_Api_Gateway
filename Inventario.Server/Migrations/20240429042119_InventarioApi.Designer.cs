// <auto-generated />
using System;
using Inventarios.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inventarios.Server.Migrations
{
    [DbContext(typeof(MiDbContext))]
    [Migration("20240429042119_InventarioApi")]
    partial class InventarioApi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inventario.Server.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Sin categoria"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Deporte"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Lacteos"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Hogar"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Bebidas Gaseosas"
                        });
                });

            modelBuilder.Entity("Inventarios.Server.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Celular")
                        .IsUnique();

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Celular = "3102345690",
                            Correo = "josejuandios@gmail.com",
                            Nombre = "Juan Jose"
                        },
                        new
                        {
                            Id = 2,
                            Celular = "3114315673",
                            Correo = "jumancitopues@hotmail.com",
                            Nombre = "Brayam"
                        },
                        new
                        {
                            Id = 3,
                            Celular = "3005554307",
                            Correo = "kjulio1212@outlook.com",
                            Nombre = "Kevin Julio"
                        });
                });

            modelBuilder.Entity("Inventarios.Server.Models.Entrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExistenciaActual")
                        .HasColumnType("int");

                    b.Property<int>("ExistenciaInicial")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("Nota")
                        .HasMaxLength(999)
                        .HasColumnType("nvarchar(999)");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Entradas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExistenciaActual = 30,
                            ExistenciaInicial = 50,
                            FechaEntrada = new DateTime(2024, 4, 28, 23, 21, 18, 374, DateTimeKind.Local).AddTicks(9365),
                            IdCategoria = 3,
                            IdProducto = 3,
                            IdProveedor = 3,
                            Nota = "Yogurt marca colanta sabores fresa y melocoton",
                            PrecioCompra = 5800m,
                            PrecioVenta = 8000m
                        },
                        new
                        {
                            Id = 2,
                            ExistenciaActual = 80,
                            ExistenciaInicial = 200,
                            FechaEntrada = new DateTime(2024, 4, 28, 23, 21, 18, 374, DateTimeKind.Local).AddTicks(9417),
                            IdCategoria = 5,
                            IdProducto = 7,
                            IdProveedor = 1,
                            Nota = "La idea es venderlas en maximo un mes",
                            PrecioCompra = 1800m,
                            PrecioVenta = 2600m
                        },
                        new
                        {
                            Id = 3,
                            ExistenciaActual = 40,
                            ExistenciaInicial = 60,
                            FechaEntrada = new DateTime(2024, 4, 28, 23, 21, 18, 374, DateTimeKind.Local).AddTicks(9446),
                            IdCategoria = 2,
                            IdProducto = 8,
                            IdProveedor = 4,
                            Nota = "Producto al cual sacarle mucho provecho por su precio de compra y de venta",
                            PrecioCompra = 50000m,
                            PrecioVenta = 190000m
                        });
                });

            modelBuilder.Entity("Inventarios.Server.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(999)
                        .HasColumnType("nvarchar(999)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Leche sin conservantes de 250l",
                            IdCategoria = 3,
                            Nombre = "Leche deslactosada"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Perfectas para jugar tennis, duracion de hasta 2 años sino te regresamos tu dinero",
                            IdCategoria = 2,
                            Nombre = "Pelotas de tennis"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Yogurt sin azucar de 280ml",
                            IdCategoria = 3,
                            Nombre = "Yogurt griego"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "La mas alta calidad exportada de japon, contiene todas las vitaminas que tu cuerpo necesita de 500ml",
                            IdCategoria = 3,
                            Nombre = "Leche premium"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "presentacion de 175l",
                            IdCategoria = 5,
                            Nombre = "Gaseosa litron postobon"
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Perfecto para tu sala de 5 puestos",
                            IdCategoria = 4,
                            Nombre = "Mueble familiar"
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Presentacion en lata de 180ml",
                            IdCategoria = 5,
                            Nombre = "Gaseosa en lata"
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Balon del FPC",
                            IdCategoria = 2,
                            Nombre = "Balon de futbol profesional"
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Cuaderno norma de 100 hojas",
                            IdCategoria = 1,
                            Nombre = "Cuaderno cuadriculado 100 hojas"
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Huevos 100% de campo",
                            IdCategoria = 1,
                            Nombre = "huevos criollos"
                        });
                });

            modelBuilder.Entity("Inventarios.Server.Models.ProductoSalida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdEntrada")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdSalida")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdEntrada");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdSalida");

                    b.ToTable("ProductoSalidas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 5,
                            Descuento = 0m,
                            IdCategoria = 3,
                            IdEntrada = 1,
                            IdProducto = 3,
                            IdSalida = 1,
                            Precio = 8000m,
                            Total = 40000m,
                            ValorDescuento = 0m
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 100,
                            Descuento = 10m,
                            IdCategoria = 5,
                            IdEntrada = 2,
                            IdProducto = 7,
                            IdSalida = 1,
                            Precio = 2600m,
                            Total = 234000m,
                            ValorDescuento = 26000m
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 20,
                            Descuento = 5m,
                            IdCategoria = 2,
                            IdEntrada = 3,
                            IdProducto = 8,
                            IdSalida = 2,
                            Precio = 190000m,
                            Total = 3610000m,
                            ValorDescuento = 190000m
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 15,
                            Descuento = 5m,
                            IdCategoria = 3,
                            IdEntrada = 1,
                            IdProducto = 3,
                            IdSalida = 3,
                            Precio = 8000m,
                            Total = 114000m,
                            ValorDescuento = 6000m
                        },
                        new
                        {
                            Id = 5,
                            Cantidad = 20,
                            Descuento = 2m,
                            IdCategoria = 5,
                            IdEntrada = 2,
                            IdProducto = 7,
                            IdSalida = 3,
                            Precio = 2600m,
                            Total = 50960m,
                            ValorDescuento = 1040m
                        });
                });

            modelBuilder.Entity("Inventarios.Server.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Celular")
                        .IsUnique();

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.ToTable("Proveedors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Celular = "3187779090",
                            Correo = "postocolombia@gmail.com",
                            Nombre = "Postobon"
                        },
                        new
                        {
                            Id = 2,
                            Celular = "3145623143",
                            Correo = "mueblesjamar@hotmail.com",
                            Nombre = "Jamar"
                        },
                        new
                        {
                            Id = 3,
                            Celular = "3005554307",
                            Correo = "colantaleche@gmail.com",
                            Nombre = "Colanta"
                        },
                        new
                        {
                            Id = 4,
                            Celular = "3005567889",
                            Correo = "adidascolombia@gmail.com",
                            Nombre = "Adidas"
                        });
                });

            modelBuilder.Entity("Inventarios.Server.Models.Salida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadProductos")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPagarConDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPagarSinDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Salidas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CantidadProductos = 2,
                            FechaFactura = new DateTime(2024, 4, 28, 23, 21, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 3,
                            TotalDescuento = 26000m,
                            TotalPagarConDescuento = 274000m,
                            TotalPagarSinDescuento = 300000m
                        },
                        new
                        {
                            Id = 2,
                            CantidadProductos = 1,
                            FechaFactura = new DateTime(2024, 4, 28, 23, 21, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 1,
                            TotalDescuento = 190000m,
                            TotalPagarConDescuento = 3610000m,
                            TotalPagarSinDescuento = 3800000m
                        },
                        new
                        {
                            Id = 3,
                            CantidadProductos = 2,
                            FechaFactura = new DateTime(2024, 4, 28, 23, 21, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 2,
                            TotalDescuento = 7040m,
                            TotalPagarConDescuento = 164960m,
                            TotalPagarSinDescuento = 172000m
                        });
                });

            modelBuilder.Entity("Inventarios.Server.Models.Entrada", b =>
                {
                    b.HasOne("Inventario.Server.Models.Categoria", "Categoria")
                        .WithMany("Compras")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventarios.Server.Models.Producto", "Producto")
                        .WithMany("Compras")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventarios.Server.Models.Proveedor", "proveedor")
                        .WithMany("Compras")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Producto");

                    b.Navigation("proveedor");
                });

            modelBuilder.Entity("Inventarios.Server.Models.Producto", b =>
                {
                    b.HasOne("Inventario.Server.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Inventarios.Server.Models.ProductoSalida", b =>
                {
                    b.HasOne("Inventario.Server.Models.Categoria", "Categoria")
                        .WithMany("ProductoSalidas")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventarios.Server.Models.Entrada", "Entrada")
                        .WithMany("ProductoSalidas")
                        .HasForeignKey("IdEntrada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventarios.Server.Models.Producto", "Producto")
                        .WithMany("ProductoSalidas")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventarios.Server.Models.Salida", "Salida")
                        .WithMany("ProductoSalidas")
                        .HasForeignKey("IdSalida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Entrada");

                    b.Navigation("Producto");

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("Inventarios.Server.Models.Salida", b =>
                {
                    b.HasOne("Inventarios.Server.Models.Cliente", "Cliente")
                        .WithMany("Salidas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Inventario.Server.Models.Categoria", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("ProductoSalidas");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Inventarios.Server.Models.Cliente", b =>
                {
                    b.Navigation("Salidas");
                });

            modelBuilder.Entity("Inventarios.Server.Models.Entrada", b =>
                {
                    b.Navigation("ProductoSalidas");
                });

            modelBuilder.Entity("Inventarios.Server.Models.Producto", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("ProductoSalidas");
                });

            modelBuilder.Entity("Inventarios.Server.Models.Proveedor", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("Inventarios.Server.Models.Salida", b =>
                {
                    b.Navigation("ProductoSalidas");
                });
#pragma warning restore 612, 618
        }
    }
}
